2025-04-14 17:09:51 - INFO - [logging_config.py:55] - 日志文件已创建: logs\20250414_170951.log
2025-04-14 17:09:54 - INFO - [main.py:51] - 
=== 运行标准训练实验 ===
2025-04-14 17:09:54 - INFO - [main.py:21] - 添加XGBoost模型...
2025-04-14 17:09:54 - INFO - [main.py:24] - 添加随机森林模型...
2025-04-14 17:09:54 - INFO - [main.py:27] - 添加逻辑回归模型...
2025-04-14 17:09:54 - INFO - [main.py:30] - 添加神经网络模型...
2025-04-14 17:09:55 - INFO - [base_experiment.py:39] - 成功加载标准化数据: 训练集 (24000, 26), 测试集 (6000, 26)
2025-04-14 17:09:55 - INFO - [base_experiment.py:49] - 成功加载非标准化数据: 训练集 (24000, 23), 测试集 (6000, 23)
2025-04-14 17:09:55 - INFO - [standard.py:44] - 训练模型: xgboost
2025-04-14 17:09:55 - INFO - [standard.py:58] - 使用非标准化数据训练模型 xgboost
2025-04-14 17:09:55 - INFO - [xgboost_model.py:69] - 
=== Training Start ===
2025-04-14 17:09:55 - INFO - [xgboost_model.py:70] - Training data size: (24000, 23)
2025-04-14 17:09:55 - INFO - [xgboost_model.py:71] - Class distribution in training set:
2025-04-14 17:09:55 - INFO - [xgboost_model.py:72] -   Positive samples: 5323
2025-04-14 17:09:55 - INFO - [xgboost_model.py:73] -   Negative samples: 18677
2025-04-14 17:09:55 - INFO - [xgboost_model.py:74] -   Scale pos weight: 3.5087356753710313
2025-04-14 17:09:56 - INFO - [xgboost_model.py:157] - 
=== Model Evaluation ===
2025-04-14 17:09:56 - INFO - [xgboost_model.py:158] - Test data size: (6000, 23)
2025-04-14 17:09:56 - INFO - [xgboost_model.py:149] - Found best threshold: 0.80 (Accuracy: 0.8208)
2025-04-14 17:09:56 - INFO - [xgboost_model.py:166] - Using threshold: 0.8000000000000002
2025-04-14 17:09:56 - INFO - [standard.py:44] - 训练模型: random_forest
2025-04-14 17:09:56 - INFO - [standard.py:58] - 使用非标准化数据训练模型 random_forest
2025-04-14 17:09:56 - INFO - [random_forest.py:97] - 
=== Random Forest Training Start ===
2025-04-14 17:09:56 - INFO - [random_forest.py:98] - Model Configuration:
2025-04-14 17:09:56 - INFO - [random_forest.py:99] - - Parameter tuning: False
2025-04-14 17:09:56 - INFO - [random_forest.py:100] - - Training data shape: (24000, 23)
2025-04-14 17:09:56 - INFO - [random_forest.py:101] - Class Distribution in Training Set:
2025-04-14 17:09:56 - INFO - [random_forest.py:102] - - Positive samples: 5323
2025-04-14 17:09:56 - INFO - [random_forest.py:103] - - Negative samples: 18677
2025-04-14 17:10:04 - INFO - [random_forest.py:134] - Cross-validation Results:
2025-04-14 17:10:04 - INFO - [random_forest.py:135] - - Mean AUC: 0.7773
2025-04-14 17:10:04 - INFO - [random_forest.py:136] - - Standard deviation: 0.0122
2025-04-14 17:10:04 - INFO - [random_forest.py:165] - 
=== Model Evaluation ===
2025-04-14 17:10:04 - INFO - [random_forest.py:166] - Test Data Shape: (6000, 23)
2025-04-14 17:10:04 - INFO - [random_forest.py:158] - Found best threshold: 0.70 (Accuracy: 0.8193)
2025-04-14 17:10:04 - INFO - [random_forest.py:173] - Using threshold: 0.7000000000000002
2025-04-14 17:10:04 - INFO - [standard.py:44] - 训练模型: logistic
2025-04-14 17:10:04 - INFO - [standard.py:52] - 使用标准化数据训练模型 logistic
2025-04-14 17:10:04 - INFO - [standard.py:44] - 训练模型: neural_net
2025-04-14 17:10:04 - INFO - [standard.py:52] - 使用标准化数据训练模型 neural_net
2025-04-14 17:11:02 - INFO - [standard.py:88] - 
=== 模型性能对比 ===
2025-04-14 17:11:02 - INFO - [standard.py:89] - 
               accuracy  precision    recall        f1   auc_roc
xgboost        0.820833   0.688889  0.330541  0.446732  0.783665
random_forest  0.819333   0.659693  0.360244  0.466010  0.779358
logistic       0.818667   0.636034  0.400609  0.491589  0.762704
neural_net     0.819000   0.647211  0.380046  0.478887  0.774879
2025-04-14 17:11:02 - INFO - [standard.py:94] - 
最佳模型是 xgboost, 得分: 0.8208
