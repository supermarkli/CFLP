2025-04-28 15:19:07 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_151907.log
2025-04-28 15:19:07 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_151907.log
2025-04-28 15:19:07 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_151907.log
2025-04-28 15:19:07 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_151907.log
2025-04-28 15:19:07 - INFO - [client_grpc.py:360] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:19:07 - INFO - [client_grpc.py:360] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:19:07 - INFO - [client_grpc.py:360] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:84] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:19:07 - INFO - [client_grpc.py:91] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:84] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:84] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:19:07 - INFO - [client_grpc.py:91] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:19:07 - INFO - [client_grpc.py:91] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:19:07 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:19:07 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:19:07 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:19:07 - INFO - [parameter_handler.py:32] - 服务器已加载私钥
2025-04-28 15:19:07 - INFO - [server_grpc.py:67] - 服务器初始化完成，等待 3 个客户端注册，计划训练 10 轮
2025-04-28 15:19:07 - INFO - [client_grpc.py:53] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:19:07 - INFO - [client_grpc.py:53] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:19:07 - INFO - [client_grpc.py:53] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:19:07 - INFO - [server_grpc.py:316] - 联邦学习安全服务器正在启动，监听端口: 50051
2025-04-28 15:19:07 - INFO - [client_grpc.py:74] - 客户端 2 初始化完成，数据集大小: 6400
2025-04-28 15:19:07 - INFO - [client_grpc.py:74] - 客户端 1 初始化完成，数据集大小: 6400
2025-04-28 15:19:07 - INFO - [client_grpc.py:74] - 客户端 3 初始化完成，数据集大小: 6400
2025-04-28 15:19:07 - INFO - [client_grpc.py:253] - 开始注册客户端: 1
2025-04-28 15:19:07 - INFO - [client_grpc.py:253] - 开始注册客户端: 2
2025-04-28 15:19:07 - INFO - [client_grpc.py:253] - 开始注册客户端: 3
2025-04-28 15:19:07 - INFO - [server_grpc.py:115] - 接收到客户端 3 的注册请求
2025-04-28 15:19:07 - INFO - [server_grpc.py:126] - 客户端 3 注册成功，当前 1/3 个客户端
2025-04-28 15:19:07 - INFO - [server_grpc.py:115] - 接收到客户端 2 的注册请求
2025-04-28 15:19:07 - INFO - [client_grpc.py:255] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:258] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:19:07 - INFO - [server_grpc.py:126] - 客户端 2 注册成功，当前 2/3 个客户端
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:137] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:19:07 - INFO - [server_grpc.py:115] - 接收到客户端 1 的注册请求
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:143] - [client] 开始反序列化参数
2025-04-28 15:19:07 - INFO - [client_grpc.py:255] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:19:07 - INFO - [server_grpc.py:126] - 客户端 1 注册成功，当前 3/3 个客户端
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:258] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:137] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:143] - [client] 开始反序列化参数
2025-04-28 15:19:07 - INFO - [client_grpc.py:255] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:258] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:137] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:143] - [client] 开始反序列化参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - INFO - [client_grpc.py:261] - 已设置初始模型参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:149] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - INFO - [client_grpc.py:261] - 已设置初始模型参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:19:07 - INFO - [server_grpc.py:141] - 客户端 3 检查训练状态，当前next_step=True, count=0
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:158] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:19:07 - INFO - [server_grpc.py:146] - 客户端 3 获得训练许可，count增加到 1/3
2025-04-28 15:19:07 - INFO - [client_grpc.py:261] - 已设置初始模型参数
2025-04-28 15:19:07 - INFO - [server_grpc.py:141] - 客户端 2 检查训练状态，当前next_step=True, count=1
2025-04-28 15:19:07 - INFO - [client_grpc.py:274] - 所有客户端已就绪，开始训练
2025-04-28 15:19:07 - INFO - [client_grpc.py:280] - 开始第 1 轮训练
2025-04-28 15:19:07 - INFO - [server_grpc.py:146] - 客户端 2 获得训练许可，count增加到 2/3
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:180] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:19:07 - INFO - [server_grpc.py:141] - 客户端 1 检查训练状态，当前next_step=True, count=2
2025-04-28 15:19:07 - INFO - [client_grpc.py:274] - 所有客户端已就绪，开始训练
2025-04-28 15:19:07 - INFO - [server_grpc.py:146] - 客户端 1 获得训练许可，count增加到 3/3
2025-04-28 15:19:07 - INFO - [client_grpc.py:280] - 开始第 1 轮训练
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:180] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:19:07 - INFO - [server_grpc.py:150] - 所有客户端已获得训练许可，重置next_step=False, count=0
2025-04-28 15:19:07 - INFO - [client_grpc.py:274] - 所有客户端已就绪，开始训练
2025-04-28 15:19:07 - INFO - [client_grpc.py:280] - 开始第 1 轮训练
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:180] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:183] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:183] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:183] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:19:07 - INFO - [client_grpc.py:186] - 本地训练完成，评估指标: {'accuracy': 0.823125, 'precision': 0.6577540106951871, 'recall': 0.35964912280701755, 'f1': 0.46502835538752363, 'auc_roc': 0.7295321637426901}
2025-04-28 15:19:07 - INFO - [client_grpc.py:283] - 开始创建第 1 轮参数更新消息
2025-04-28 15:19:07 - INFO - [client_grpc.py:197] - 开始创建参数更新消息: 客户端=2, 轮次=0
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:201] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:213] - 开始序列化模型参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:96] - [client] model.get_parameters() output: {'coef': array([[-0.23438266,  0.01646349,  0.74735349,  0.05605565,  0.0360255 ,
         0.22207419, -0.03742454,  0.12457162,  0.03099397,  0.06569396,
         0.07048177, -0.13480254, -0.06326828, -0.00209681, -0.1588847 ,
        -0.09308062, -0.03841057,  0.03813565,  0.03744798, -0.06182798,
        -0.26612445,  0.85861651,  0.93489919,  0.87596635, -0.07210833,
        -0.16395882]]), 'intercept': array([-0.81957963])}
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23438266  0.01646349  0.74735349  0.05605565  0.0360255   0.22207419
  -0.03742454  0.12457162  0.03099397  0.06569396  0.07048177 -0.13480254
  -0.06326828 -0.00209681 -0.1588847  -0.09308062 -0.03841057  0.03813565
   0.03744798 -0.06182798 -0.26612445  0.85861651  0.93489919  0.87596635
  -0.07210833 -0.16395882]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.81957963]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23438266  0.01646349  0.74735349  0.05605565  0.0360255   0.22207419
  -0.03742454  0.12457162  0.03099397  0.06569396  0.07048177 -0.13480254
  -0.06326828 -0.00209681 -0.1588847  -0.09308062 -0.03841057  0.03813565
   0.03744798 -0.06182798 -0.26612445  0.85861651  0.93489919  0.87596635
  -0.07210833 -0.16395882]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.81957963]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:118] - [client] 使用加密方式序列化参数
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'numpy.ndarray'>, value=[[-0.23438266  0.01646349  0.74735349  0.05605565  0.0360255   0.22207419
  -0.03742454  0.12457162  0.03099397  0.06569396  0.07048177 -0.13480254
  -0.06326828 -0.00209681 -0.1588847  -0.09308062 -0.03841057  0.03813565
   0.03744798 -0.06182798 -0.26612445  0.85861651  0.93489919  0.87596635
  -0.07210833 -0.16395882]]
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23438266  0.01646349  0.74735349  0.05605565  0.0360255   0.22207419
  -0.03742454  0.12457162  0.03099397  0.06569396  0.07048177 -0.13480254
  -0.06326828 -0.00209681 -0.1588847  -0.09308062 -0.03841057  0.03813565
   0.03744798 -0.06182798 -0.26612445  0.85861651  0.93489919  0.87596635
  -0.07210833 -0.16395882]]
2025-04-28 15:19:07 - ERROR - [client_grpc.py:128] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:129] - 参数类型: <class 'dict'>
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:238] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:239] - 当前客户端状态: ID=2, 轮次=0, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:241] - 指标信息: {'accuracy': 0.823125, 'precision': 0.6577540106951871, 'recall': 0.35964912280701755, 'f1': 0.46502835538752363, 'auc_roc': 0.7295321637426901}
2025-04-28 15:19:07 - ERROR - [client_grpc.py:331] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:338] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:339] - 客户端状态: ID=2, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:378] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - INFO - [client_grpc.py:348] - 已关闭gRPC通道
2025-04-28 15:19:07 - INFO - [client_grpc.py:186] - 本地训练完成，评估指标: {'accuracy': 0.825625, 'precision': 0.6286919831223629, 'recall': 0.43823529411764706, 'f1': 0.5164644714038128, 'auc_roc': 0.7466690009337068}
2025-04-28 15:19:07 - INFO - [client_grpc.py:283] - 开始创建第 1 轮参数更新消息
2025-04-28 15:19:07 - INFO - [client_grpc.py:197] - 开始创建参数更新消息: 客户端=3, 轮次=0
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:201] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:213] - 开始序列化模型参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:96] - [client] model.get_parameters() output: {'coef': array([[-0.14127019,  0.05707698,  0.6585437 ,  0.04760234,  0.20485216,
        -0.00520153,  0.10799187,  0.10798628, -0.4722096 ,  0.51934139,
        -0.06343267,  0.28187389, -0.27999705,  0.0411617 , -0.2839346 ,
        -0.09849918, -0.07369902, -0.04185146,  0.02790955, -0.06265481,
        -0.13217598,  0.77824834,  0.66232547,  0.75752614,  0.13839348,
        -0.14250973]]), 'intercept': array([-0.798185])}
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14127019  0.05707698  0.6585437   0.04760234  0.20485216 -0.00520153
   0.10799187  0.10798628 -0.4722096   0.51934139 -0.06343267  0.28187389
  -0.27999705  0.0411617  -0.2839346  -0.09849918 -0.07369902 -0.04185146
   0.02790955 -0.06265481 -0.13217598  0.77824834  0.66232547  0.75752614
   0.13839348 -0.14250973]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.798185]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14127019  0.05707698  0.6585437   0.04760234  0.20485216 -0.00520153
   0.10799187  0.10798628 -0.4722096   0.51934139 -0.06343267  0.28187389
  -0.27999705  0.0411617  -0.2839346  -0.09849918 -0.07369902 -0.04185146
   0.02790955 -0.06265481 -0.13217598  0.77824834  0.66232547  0.75752614
   0.13839348 -0.14250973]]
2025-04-28 15:19:07 - INFO - [client_grpc.py:186] - 本地训练完成，评估指标: {'accuracy': 0.831875, 'precision': 0.6927374301675978, 'recall': 0.3668639053254438, 'f1': 0.4796905222437137, 'auc_roc': 0.7445399900599218}
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.798185]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:118] - [client] 使用加密方式序列化参数
2025-04-28 15:19:07 - INFO - [client_grpc.py:283] - 开始创建第 1 轮参数更新消息
2025-04-28 15:19:07 - INFO - [client_grpc.py:197] - 开始创建参数更新消息: 客户端=1, 轮次=0
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:201] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:213] - 开始序列化模型参数
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:96] - [client] model.get_parameters() output: {'coef': array([[-0.194016  , -0.01371031,  0.70175168,  0.10773657,  0.04221629,
         0.0782759 ,  0.08673244,  0.19325992, -0.07901143,  0.01676025,
         0.19662261, -0.06305697,  0.21538802, -0.24983865, -0.00877411,
        -0.24264751, -0.04348159, -0.1032569 , -0.00683593, -0.02539518,
        -0.16845525,  1.15061762,  1.21197628,  1.18609297,  0.04325774,
        -0.16570727]]), 'intercept': array([-1.20885893])}
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.194016   -0.01371031  0.70175168  0.10773657  0.04221629  0.0782759
   0.08673244  0.19325992 -0.07901143  0.01676025  0.19662261 -0.06305697
   0.21538802 -0.24983865 -0.00877411 -0.24264751 -0.04348159 -0.1032569
  -0.00683593 -0.02539518 -0.16845525  1.15061762  1.21197628  1.18609297
   0.04325774 -0.16570727]]
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'numpy.ndarray'>, value=[[-0.14127019  0.05707698  0.6585437   0.04760234  0.20485216 -0.00520153
   0.10799187  0.10798628 -0.4722096   0.51934139 -0.06343267  0.28187389
  -0.27999705  0.0411617  -0.2839346  -0.09849918 -0.07369902 -0.04185146
   0.02790955 -0.06265481 -0.13217598  0.77824834  0.66232547  0.75752614
   0.13839348 -0.14250973]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:100] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-1.20885893]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.194016   -0.01371031  0.70175168  0.10773657  0.04221629  0.0782759
   0.08673244  0.19325992 -0.07901143  0.01676025  0.19662261 -0.06305697
   0.21538802 -0.24983865 -0.00877411 -0.24264751 -0.04348159 -0.1032569
  -0.00683593 -0.02539518 -0.16845525  1.15061762  1.21197628  1.18609297
   0.04325774 -0.16570727]]
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14127019  0.05707698  0.6585437   0.04760234  0.20485216 -0.00520153
   0.10799187  0.10798628 -0.4722096   0.51934139 -0.06343267  0.28187389
  -0.27999705  0.0411617  -0.2839346  -0.09849918 -0.07369902 -0.04185146
   0.02790955 -0.06265481 -0.13217598  0.77824834  0.66232547  0.75752614
   0.13839348 -0.14250973]]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:113] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-1.20885893]
2025-04-28 15:19:07 - DEBUG - [client_grpc.py:118] - [client] 使用加密方式序列化参数
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'numpy.ndarray'>, value=[[-0.194016   -0.01371031  0.70175168  0.10773657  0.04221629  0.0782759
   0.08673244  0.19325992 -0.07901143  0.01676025  0.19662261 -0.06305697
   0.21538802 -0.24983865 -0.00877411 -0.24264751 -0.04348159 -0.1032569
  -0.00683593 -0.02539518 -0.16845525  1.15061762  1.21197628  1.18609297
   0.04325774 -0.16570727]]
2025-04-28 15:19:07 - ERROR - [client_grpc.py:128] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.194016   -0.01371031  0.70175168  0.10773657  0.04221629  0.0782759
   0.08673244  0.19325992 -0.07901143  0.01676025  0.19662261 -0.06305697
   0.21538802 -0.24983865 -0.00877411 -0.24264751 -0.04348159 -0.1032569
  -0.00683593 -0.02539518 -0.16845525  1.15061762  1.21197628  1.18609297
   0.04325774 -0.16570727]]
2025-04-28 15:19:07 - ERROR - [client_grpc.py:129] - 参数类型: <class 'dict'>
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:238] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:128] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:239] - 当前客户端状态: ID=3, 轮次=0, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:129] - 参数类型: <class 'dict'>
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:241] - 指标信息: {'accuracy': 0.825625, 'precision': 0.6286919831223629, 'recall': 0.43823529411764706, 'f1': 0.5164644714038128, 'auc_roc': 0.7466690009337068}
2025-04-28 15:19:07 - ERROR - [client_grpc.py:131] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:19:07 - ERROR - [client_grpc.py:331] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:238] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:338] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:239] - 当前客户端状态: ID=1, 轮次=0, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:241] - 指标信息: {'accuracy': 0.831875, 'precision': 0.6927374301675978, 'recall': 0.3668639053254438, 'f1': 0.4796905222437137, 'auc_roc': 0.7445399900599218}
2025-04-28 15:19:07 - ERROR - [client_grpc.py:339] - 客户端状态: ID=3, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:331] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:378] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - ERROR - [client_grpc.py:338] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 284, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 214, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 119, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(mapped_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - INFO - [client_grpc.py:348] - 已关闭gRPC通道
2025-04-28 15:19:07 - ERROR - [client_grpc.py:339] - 客户端状态: ID=1, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:19:07 - ERROR - [client_grpc.py:378] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:19:07 - INFO - [client_grpc.py:348] - 已关闭gRPC通道
