2025-04-28 15:21:24 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_152124.log
2025-04-28 15:21:24 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_152124.log
2025-04-28 15:21:24 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_152124.log
2025-04-28 15:21:24 - INFO - [logging_config.py:55] - 日志文件已创建: logs/20250428_152124.log
2025-04-28 15:21:25 - INFO - [parameter_handler.py:32] - 服务器已加载私钥
2025-04-28 15:21:25 - INFO - [server_grpc.py:67] - 服务器初始化完成，等待 3 个客户端注册，计划训练 10 轮
2025-04-28 15:21:25 - INFO - [server_grpc.py:316] - 联邦学习安全服务器正在启动，监听端口: 50051
2025-04-28 15:21:25 - INFO - [client_grpc.py:385] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:21:25 - INFO - [client_grpc.py:385] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:21:25 - INFO - [client_grpc.py:385] - 成功加载客户端数据: /app/data/credit_card_train_normalized.csv, 形状: X=(8000, 26), y=(8000,)
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:85] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:85] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:21:25 - INFO - [client_grpc.py:92] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:21:25 - INFO - [client_grpc.py:92] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:85] - 数据集划分完成 - 训练集: (6400, 26), 测试集: (1600, 26)
2025-04-28 15:21:25 - INFO - [client_grpc.py:92] - 数据初始化完成，训练数据大小: 6400
2025-04-28 15:21:25 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:21:25 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:21:25 - INFO - [parameter_handler.py:37] - 客户端已加载公钥
2025-04-28 15:21:25 - INFO - [client_grpc.py:54] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:21:25 - INFO - [client_grpc.py:54] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:21:25 - INFO - [client_grpc.py:54] - 使用安全通道(SSL/TLS)连接服务器
2025-04-28 15:21:25 - INFO - [client_grpc.py:75] - 客户端 1 初始化完成，数据集大小: 6400
2025-04-28 15:21:25 - INFO - [client_grpc.py:75] - 客户端 2 初始化完成，数据集大小: 6400
2025-04-28 15:21:25 - INFO - [client_grpc.py:75] - 客户端 3 初始化完成，数据集大小: 6400
2025-04-28 15:21:25 - INFO - [client_grpc.py:278] - 开始注册客户端: 2
2025-04-28 15:21:25 - INFO - [client_grpc.py:278] - 开始注册客户端: 1
2025-04-28 15:21:25 - INFO - [client_grpc.py:278] - 开始注册客户端: 3
2025-04-28 15:21:25 - INFO - [server_grpc.py:115] - 接收到客户端 2 的注册请求
2025-04-28 15:21:25 - INFO - [server_grpc.py:115] - 接收到客户端 3 的注册请求
2025-04-28 15:21:25 - INFO - [server_grpc.py:126] - 客户端 2 注册成功，当前 1/3 个客户端
2025-04-28 15:21:25 - INFO - [server_grpc.py:126] - 客户端 3 注册成功，当前 2/3 个客户端
2025-04-28 15:21:25 - INFO - [client_grpc.py:280] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:21:25 - INFO - [client_grpc.py:280] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:283] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:21:25 - INFO - [server_grpc.py:115] - 接收到客户端 1 的注册请求
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:283] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:162] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:162] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:168] - [client] 开始反序列化参数
2025-04-28 15:21:25 - INFO - [server_grpc.py:126] - 客户端 1 注册成功，当前 3/3 个客户端
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:168] - [client] 开始反序列化参数
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - INFO - [client_grpc.py:280] - 客户端注册完成: 响应码=200, 消息=注册成功
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:283] - 收到初始模型参数, 大小: 2 字节
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:162] - [client] _deserialize_parameters input size: 2 字节
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:168] - [client] 开始反序列化参数
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:174] - [client] deserialized param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - INFO - [client_grpc.py:286] - 已设置初始模型参数
2025-04-28 15:21:25 - INFO - [client_grpc.py:286] - 已设置初始模型参数
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0. 0.
  0. 0.]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:183] - [client] mapped (final) param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[0.00645546]
2025-04-28 15:21:25 - INFO - [client_grpc.py:286] - 已设置初始模型参数
2025-04-28 15:21:25 - INFO - [server_grpc.py:141] - 客户端 3 检查训练状态，当前next_step=True, count=0
2025-04-28 15:21:25 - INFO - [server_grpc.py:146] - 客户端 3 获得训练许可，count增加到 1/3
2025-04-28 15:21:25 - INFO - [server_grpc.py:141] - 客户端 2 检查训练状态，当前next_step=True, count=1
2025-04-28 15:21:25 - INFO - [server_grpc.py:146] - 客户端 2 获得训练许可，count增加到 2/3
2025-04-28 15:21:25 - INFO - [client_grpc.py:299] - 所有客户端已就绪，开始训练
2025-04-28 15:21:25 - INFO - [server_grpc.py:141] - 客户端 1 检查训练状态，当前next_step=True, count=2
2025-04-28 15:21:25 - INFO - [client_grpc.py:305] - 开始第 1 轮训练
2025-04-28 15:21:25 - INFO - [client_grpc.py:299] - 所有客户端已就绪，开始训练
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:205] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:21:25 - INFO - [server_grpc.py:146] - 客户端 1 获得训练许可，count增加到 3/3
2025-04-28 15:21:25 - INFO - [client_grpc.py:305] - 开始第 1 轮训练
2025-04-28 15:21:25 - INFO - [server_grpc.py:150] - 所有客户端已获得训练许可，重置next_step=False, count=0
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:205] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:21:25 - INFO - [client_grpc.py:299] - 所有客户端已就绪，开始训练
2025-04-28 15:21:25 - INFO - [client_grpc.py:305] - 开始第 1 轮训练
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:205] - 开始训练模型，训练数据形状: X=(6400, 26), y=(6400,)
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:208] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:208] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:208] - 训练完成，开始评估模型，测试数据形状: X=(1600, 26), y=(1600,)
2025-04-28 15:21:25 - INFO - [client_grpc.py:211] - 本地训练完成，评估指标: {'accuracy': 0.8325, 'precision': 0.6944444444444444, 'recall': 0.3698224852071006, 'f1': 0.4826254826254826, 'auc_roc': 0.7439796884816998}
2025-04-28 15:21:25 - INFO - [client_grpc.py:308] - 开始创建第 1 轮参数更新消息
2025-04-28 15:21:25 - INFO - [client_grpc.py:222] - 开始创建参数更新消息: 客户端=1, 轮次=0
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:226] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:238] - 开始序列化模型参数
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:97] - [client] model.get_parameters() output: {'coef': array([[-0.19671276, -0.01386271,  0.70025478,  0.10887827,  0.03669841,
         0.08098752,  0.08317562,  0.20018913, -0.09297511,  0.05282385,
         0.16181588, -0.05364913,  0.20734734, -0.24182712, -0.01242295,
        -0.23596748, -0.04463217, -0.10271213, -0.00262891, -0.02345361,
        -0.16937782,  0.93874344,  1.00305114,  0.97098949, -0.0051404 ,
        -0.21310941]]), 'intercept': array([-0.95155876])}
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.19671276 -0.01386271  0.70025478  0.10887827  0.03669841  0.08098752
   0.08317562  0.20018913 -0.09297511  0.05282385  0.16181588 -0.05364913
   0.20734734 -0.24182712 -0.01242295 -0.23596748 -0.04463217 -0.10271213
  -0.00262891 -0.02345361 -0.16937782  0.93874344  1.00305114  0.97098949
  -0.0051404  -0.21310941]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.95155876]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.19671276 -0.01386271  0.70025478  0.10887827  0.03669841  0.08098752
   0.08317562  0.20018913 -0.09297511  0.05282385  0.16181588 -0.05364913
   0.20734734 -0.24182712 -0.01242295 -0.23596748 -0.04463217 -0.10271213
  -0.00262891 -0.02345361 -0.16937782  0.93874344  1.00305114  0.97098949
  -0.0051404  -0.21310941]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.95155876]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: coef
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: intercept
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:136] - [client] 参数类型转换完成
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=coef, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=intercept, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'float'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:143] - [client] 使用加密方式序列化参数
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'list'>, value=[[-0.1967127579804488, -0.013862712791013617, 0.7002547775276706, 0.10887827333763496, 0.03669840558422142, 0.08098751595996, 0.08317561999773138, 0.20018913054411422, -0.09297511106243704, 0.05282385017741884, 0.1618158807447739, -0.053649134804769565, 0.20734734168167135, -0.24182711893421593, -0.012422950222693728, -0.2359674753128406, -0.04463216803296597, -0.10271213268184078, -0.002628913473208016, -0.0234536092332298, -0.1693778230426846, 0.9387434431184566, 1.0030511352617788, 0.9709894909107974, -0.005140397711841365, -0.21310940759184538]]
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.19671276 -0.01386271  0.70025478  0.10887827  0.03669841  0.08098752
   0.08317562  0.20018913 -0.09297511  0.05282385  0.16181588 -0.05364913
   0.20734734 -0.24182712 -0.01242295 -0.23596748 -0.04463217 -0.10271213
  -0.00262891 -0.02345361 -0.16937782  0.93874344  1.00305114  0.97098949
  -0.0051404  -0.21310941]]
2025-04-28 15:21:25 - ERROR - [client_grpc.py:153] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:154] - 参数类型: <class 'dict'>
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - ERROR - [client_grpc.py:263] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:264] - 当前客户端状态: ID=1, 轮次=0, 使用加密=True
2025-04-28 15:21:25 - ERROR - [client_grpc.py:266] - 指标信息: {'accuracy': 0.8325, 'precision': 0.6944444444444444, 'recall': 0.3698224852071006, 'f1': 0.4826254826254826, 'auc_roc': 0.7439796884816998}
2025-04-28 15:21:25 - ERROR - [client_grpc.py:356] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:363] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:364] - 客户端状态: ID=1, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:21:25 - ERROR - [client_grpc.py:403] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - INFO - [client_grpc.py:373] - 已关闭gRPC通道
2025-04-28 15:21:25 - INFO - [client_grpc.py:211] - 本地训练完成，评估指标: {'accuracy': 0.82375, 'precision': 0.6595744680851063, 'recall': 0.36257309941520466, 'f1': 0.46792452830188674, 'auc_roc': 0.7298366477933041}
2025-04-28 15:21:25 - INFO - [client_grpc.py:308] - 开始创建第 1 轮参数更新消息
2025-04-28 15:21:25 - INFO - [client_grpc.py:222] - 开始创建参数更新消息: 客户端=2, 轮次=0
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:226] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:238] - 开始序列化模型参数
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:97] - [client] model.get_parameters() output: {'coef': array([[-0.23186266,  0.0177129 ,  0.75297856,  0.05453765,  0.03545332,
         0.22693629, -0.03740157,  0.12377178, -0.00931727,  0.11202776,
         0.0938805 , -0.18571913, -0.01735542, -0.02356549, -0.17031498,
        -0.09311415, -0.02906178,  0.02635692,  0.04577277, -0.06114423,
        -0.26523909,  0.90482056,  0.97349935,  0.91708756, -0.01820595,
        -0.10660211]]), 'intercept': array([-0.91199787])}
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23186266  0.0177129   0.75297856  0.05453765  0.03545332  0.22693629
  -0.03740157  0.12377178 -0.00931727  0.11202776  0.0938805  -0.18571913
  -0.01735542 -0.02356549 -0.17031498 -0.09311415 -0.02906178  0.02635692
   0.04577277 -0.06114423 -0.26523909  0.90482056  0.97349935  0.91708756
  -0.01820595 -0.10660211]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.91199787]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23186266  0.0177129   0.75297856  0.05453765  0.03545332  0.22693629
  -0.03740157  0.12377178 -0.00931727  0.11202776  0.0938805  -0.18571913
  -0.01735542 -0.02356549 -0.17031498 -0.09311415 -0.02906178  0.02635692
   0.04577277 -0.06114423 -0.26523909  0.90482056  0.97349935  0.91708756
  -0.01820595 -0.10660211]]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.91199787]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: coef
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: intercept
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:136] - [client] 参数类型转换完成
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=coef, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=intercept, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'float'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:143] - [client] 使用加密方式序列化参数
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'list'>, value=[[-0.2318626626015571, 0.01771290408049248, 0.7529785634010333, 0.05453765228734176, 0.03545332155364962, 0.22693629372456522, -0.03740156541773652, 0.12377178483970708, -0.009317269397168289, 0.11202776183696835, 0.09388050417904852, -0.18571913463267337, -0.017355424112728366, -0.023565491867287354, -0.17031498468698117, -0.09311414516747973, -0.02906177536069151, 0.026356919309831993, 0.04577276860671615, -0.06114422680678177, -0.26523909101187526, 0.9048205617439575, 0.9734993475327209, 0.9170875620816391, -0.01820595132394491, -0.10660210650367336]]
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.23186266  0.0177129   0.75297856  0.05453765  0.03545332  0.22693629
  -0.03740157  0.12377178 -0.00931727  0.11202776  0.0938805  -0.18571913
  -0.01735542 -0.02356549 -0.17031498 -0.09311415 -0.02906178  0.02635692
   0.04577277 -0.06114423 -0.26523909  0.90482056  0.97349935  0.91708756
  -0.01820595 -0.10660211]]
2025-04-28 15:21:25 - INFO - [client_grpc.py:211] - 本地训练完成，评估指标: {'accuracy': 0.82625, 'precision': 0.6302521008403361, 'recall': 0.4411764705882353, 'f1': 0.5190311418685122, 'auc_roc': 0.7458823529411764}
2025-04-28 15:21:25 - INFO - [client_grpc.py:308] - 开始创建第 1 轮参数更新消息
2025-04-28 15:21:25 - INFO - [client_grpc.py:222] - 开始创建参数更新消息: 客户端=3, 轮次=0
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:226] - 获取到模型参数，键值: ['coef', 'intercept']
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:238] - 开始序列化模型参数
2025-04-28 15:21:25 - ERROR - [client_grpc.py:153] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:154] - 参数类型: <class 'dict'>
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:97] - [client] model.get_parameters() output: {'coef': array([[-0.14198607,  0.06008318,  0.65894825,  0.04462432,  0.20958691,
        -0.00282429,  0.10311998,  0.10951359, -0.4726995 ,  0.53815968,
        -0.0746283 ,  0.31880069, -0.34820644,  0.06499123, -0.28665678,
        -0.09311147, -0.08838455, -0.03581958,  0.02084899, -0.06008621,
        -0.12672852,  0.77732897,  0.66174484,  0.76112812,  0.173092  ,
        -0.10805135]]), 'intercept': array([-0.83719828])}
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - ERROR - [client_grpc.py:263] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14198607  0.06008318  0.65894825  0.04462432  0.20958691 -0.00282429
   0.10311998  0.10951359 -0.4726995   0.53815968 -0.0746283   0.31880069
  -0.34820644  0.06499123 -0.28665678 -0.09311147 -0.08838455 -0.03581958
   0.02084899 -0.06008621 -0.12672852  0.77732897  0.66174484  0.76112812
   0.173092   -0.10805135]]
2025-04-28 15:21:25 - ERROR - [client_grpc.py:264] - 当前客户端状态: ID=2, 轮次=0, 使用加密=True
2025-04-28 15:21:25 - ERROR - [client_grpc.py:266] - 指标信息: {'accuracy': 0.82375, 'precision': 0.6595744680851063, 'recall': 0.36257309941520466, 'f1': 0.46792452830188674, 'auc_roc': 0.7298366477933041}
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:101] - [client] model param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.83719828]
2025-04-28 15:21:25 - ERROR - [client_grpc.py:356] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=coef, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14198607  0.06008318  0.65894825  0.04462432  0.20958691 -0.00282429
   0.10311998  0.10951359 -0.4726995   0.53815968 -0.0746283   0.31880069
  -0.34820644  0.06499123 -0.28665678 -0.09311147 -0.08838455 -0.03581958
   0.02084899 -0.06008621 -0.12672852  0.77732897  0.66174484  0.76112812
   0.173092   -0.10805135]]
2025-04-28 15:21:25 - ERROR - [client_grpc.py:363] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:364] - 客户端状态: ID=2, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:114] - [client] mapped param: key=intercept, type=<class 'numpy.ndarray'>, dtype=float64, shape=(1,), value=[-0.83719828]
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: coef
2025-04-28 15:21:25 - ERROR - [client_grpc.py:403] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:127] - 转换NumPy float数组为Python float数组: intercept
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:136] - [client] 参数类型转换完成
2025-04-28 15:21:25 - INFO - [client_grpc.py:373] - 已关闭gRPC通道
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=coef, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:138] - [client] converted param: key=intercept, type=<class 'list'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:140] - [client] first element type: <class 'float'>
2025-04-28 15:21:25 - DEBUG - [client_grpc.py:143] - [client] 使用加密方式序列化参数
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:69] - [serialize_encrypted_parameters] key=coef, original type=<class 'list'>, value=[[-0.14198607450743447, 0.0600831794042281, 0.6589482538221685, 0.044624319286888994, 0.20958691071149232, -0.0028242933971644978, 0.10311998353490427, 0.10951358648000008, -0.4726994966837357, 0.538159675032917, -0.07462830266913553, 0.3188006863395071, -0.3482064360426263, 0.06499123384323055, -0.286656782195163, -0.09311146589224666, -0.08838454508441242, -0.03581958421399001, 0.020848992143035372, -0.06008621418970737, -0.12672852050027597, 0.7773289669541262, 0.6617448449979074, 0.7611281169420916, 0.17309200067261812, -0.10805134860837891]]
2025-04-28 15:21:25 - DEBUG - [parameter_handler.py:73] - [serialize_encrypted_parameters] key=coef, after np.array: type=<class 'numpy.ndarray'>, dtype=float64, shape=(1, 26), value=[[-0.14198607  0.06008318  0.65894825  0.04462432  0.20958691 -0.00282429
   0.10311998  0.10951359 -0.4726995   0.53815968 -0.0746283   0.31880069
  -0.34820644  0.06499123 -0.28665678 -0.09311147 -0.08838455 -0.03581958
   0.02084899 -0.06008621 -0.12672852  0.77732897  0.66174484  0.76112812
   0.173092   -0.10805135]]
2025-04-28 15:21:25 - ERROR - [client_grpc.py:153] - 参数序列化失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:154] - 参数类型: <class 'dict'>
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 coef 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - ERROR - [client_grpc.py:156] - 参数 intercept 类型: <class 'numpy.ndarray'>, dtype=float64
2025-04-28 15:21:25 - ERROR - [client_grpc.py:263] - 创建参数更新消息失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:264] - 当前客户端状态: ID=3, 轮次=0, 使用加密=True
2025-04-28 15:21:25 - ERROR - [client_grpc.py:266] - 指标信息: {'accuracy': 0.82625, 'precision': 0.6302521008403361, 'recall': 0.4411764705882353, 'f1': 0.5190311418685122, 'auc_roc': 0.7458823529411764}
2025-04-28 15:21:25 - ERROR - [client_grpc.py:356] - 第 1 轮训练失败: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:363] - 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
Traceback (most recent call last):
  File "/app/docker_federated/grpc/client_grpc.py", line 309, in participate_in_training
    parameter_update = self._create_parameter_update_message(metrics)
  File "/app/docker_federated/grpc/client_grpc.py", line 239, in _create_parameter_update_message
    serialized_parameters = self._serialize_parameters(parameters)
  File "/app/docker_federated/grpc/client_grpc.py", line 144, in _serialize_parameters
    serialized = self.parameter_handler.serialize_encrypted_parameters(converted_params)
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in serialize_encrypted_parameters
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/app/docker_federated/grpc/parameter_handler.py", line 75, in <listcomp>
    encrypted = [self.public_key.encrypt(x) for x in value_int.flatten()]
  File "/usr/local/lib/python3.9/site-packages/phe/paillier.py", line 173, in encrypt
    encoding = EncodedNumber.encode(self, value, precision)
  File "/usr/local/lib/python3.9/site-packages/phe/encoding.py", line 176, in encode
    raise TypeError("Don't know the precision of type %s."
TypeError: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - ERROR - [client_grpc.py:364] - 客户端状态: ID=3, 当前轮次=0, 目标轮次=10, 使用加密=True
2025-04-28 15:21:25 - ERROR - [client_grpc.py:403] - 训练过程中发生错误: 训练过程中发生错误: Don't know the precision of type <class 'numpy.int64'>.
2025-04-28 15:21:25 - INFO - [client_grpc.py:373] - 已关闭gRPC通道
