2025-04-14 17:35:04 - INFO - [logging_config.py:55] - 日志文件已创建: logs\20250414_173504.log
2025-04-14 17:35:06 - INFO - [main.py:51] - 
=== 运行标准训练实验 ===
2025-04-14 17:35:06 - INFO - [main.py:21] - 添加XGBoost模型...
2025-04-14 17:35:06 - INFO - [main.py:24] - 添加随机森林模型...
2025-04-14 17:35:06 - INFO - [main.py:27] - 添加逻辑回归模型...
2025-04-14 17:35:06 - INFO - [main.py:30] - 添加神经网络模型...
2025-04-14 17:35:07 - INFO - [base_experiment.py:39] - 成功加载标准化数据: 训练集 (24000, 26), 测试集 (6000, 26)
2025-04-14 17:35:07 - INFO - [base_experiment.py:49] - 成功加载非标准化数据: 训练集 (24000, 23), 测试集 (6000, 23)
2025-04-14 17:35:07 - INFO - [standard.py:50] - 
=== xgboost 模型训练  ===
2025-04-14 17:35:07 - INFO - [standard.py:64] - 使用非标准化数据训练 xgboost 模型 
2025-04-14 17:35:07 - INFO - [xgboost_model.py:69] - 训练数据大小: (24000, 23)
2025-04-14 17:35:07 - INFO - [xgboost_model.py:70] - 训练集中的类别分布:
2025-04-14 17:35:07 - INFO - [xgboost_model.py:71] -   正样本数量: 5323
2025-04-14 17:35:07 - INFO - [xgboost_model.py:72] -   负样本数量: 18677
2025-04-14 17:35:07 - INFO - [xgboost_model.py:73] -   正样本权重: 3.5087356753710313
2025-04-14 17:35:09 - INFO - [xgboost_model.py:156] - 
=== XGBoost模型评估 ===
2025-04-14 17:35:09 - INFO - [xgboost_model.py:157] - 测试数据大小: (6000, 23)
2025-04-14 17:35:09 - INFO - [xgboost_model.py:165] - 使用阈值: 0.8000
2025-04-14 17:35:09 - INFO - [standard.py:31] - XGBoost模型评估指标:
2025-04-14 17:35:09 - INFO - [standard.py:32] - Accuracy: 0.8208
2025-04-14 17:35:09 - INFO - [standard.py:33] - Precision: 0.6889
2025-04-14 17:35:09 - INFO - [standard.py:34] - Recall: 0.3305
2025-04-14 17:35:09 - INFO - [standard.py:35] - F1 Score: 0.4467
2025-04-14 17:35:09 - INFO - [standard.py:36] - AUC-ROC: 0.7837
2025-04-14 17:35:09 - INFO - [standard.py:50] - 
=== random_forest 模型训练  ===
2025-04-14 17:35:09 - INFO - [standard.py:64] - 使用非标准化数据训练 random_forest 模型 
2025-04-14 17:35:09 - INFO - [random_forest.py:80] - 模型配置:
2025-04-14 17:35:09 - INFO - [random_forest.py:81] - - 参数调优: False
2025-04-14 17:35:09 - INFO - [random_forest.py:82] - - 训练数据形状: (24000, 23)
2025-04-14 17:35:09 - INFO - [random_forest.py:83] - 训练集类别分布:
2025-04-14 17:35:09 - INFO - [random_forest.py:84] - - 正样本数量: 5323
2025-04-14 17:35:09 - INFO - [random_forest.py:85] - - 负样本数量: 18677
2025-04-14 17:35:17 - INFO - [random_forest.py:116] - 交叉验证结果:
2025-04-14 17:35:17 - INFO - [random_forest.py:117] - - 平均AUC: 0.7773
2025-04-14 17:35:17 - INFO - [random_forest.py:118] - - 标准差: 0.0122
2025-04-14 17:35:17 - INFO - [random_forest.py:147] - 
=== 模型评估 ===
2025-04-14 17:35:17 - INFO - [random_forest.py:148] - 测试数据形状: (6000, 23)
2025-04-14 17:35:17 - INFO - [random_forest.py:140] - 找到最优阈值: 0.70 (准确率: 0.8193)
2025-04-14 17:35:17 - INFO - [random_forest.py:155] - 使用阈值: 0.7000
2025-04-14 17:35:17 - INFO - [standard.py:31] - RandomForest模型评估指标:
2025-04-14 17:35:17 - INFO - [standard.py:32] - Accuracy: 0.8193
2025-04-14 17:35:17 - INFO - [standard.py:33] - Precision: 0.6597
2025-04-14 17:35:17 - INFO - [standard.py:34] - Recall: 0.3602
2025-04-14 17:35:17 - INFO - [standard.py:35] - F1 Score: 0.4660
2025-04-14 17:35:17 - INFO - [standard.py:36] - AUC-ROC: 0.7794
2025-04-14 17:35:17 - INFO - [standard.py:50] - 
=== logistic 模型训练  ===
2025-04-14 17:35:17 - INFO - [standard.py:58] - 使用标准化数据训练 logistic 模型 
2025-04-14 17:35:17 - INFO - [standard.py:31] - LogisticRegression模型评估指标:
2025-04-14 17:35:17 - INFO - [standard.py:32] - Accuracy: 0.8183
2025-04-14 17:35:17 - INFO - [standard.py:33] - Precision: 0.6348
2025-04-14 17:35:17 - INFO - [standard.py:34] - Recall: 0.3998
2025-04-14 17:35:17 - INFO - [standard.py:35] - F1 Score: 0.4907
2025-04-14 17:35:17 - INFO - [standard.py:36] - AUC-ROC: 0.7627
2025-04-14 17:35:17 - INFO - [standard.py:50] - 
=== neural_net 模型训练  ===
2025-04-14 17:35:17 - INFO - [standard.py:58] - 使用标准化数据训练 neural_net 模型 
2025-04-14 17:36:17 - INFO - [standard.py:31] - NeuralNet模型评估指标:
2025-04-14 17:36:17 - INFO - [standard.py:32] - Accuracy: 0.8180
2025-04-14 17:36:17 - INFO - [standard.py:33] - Precision: 0.6595
2025-04-14 17:36:17 - INFO - [standard.py:34] - Recall: 0.3481
2025-04-14 17:36:17 - INFO - [standard.py:35] - F1 Score: 0.4556
2025-04-14 17:36:17 - INFO - [standard.py:36] - AUC-ROC: 0.7751
2025-04-14 17:36:17 - INFO - [standard.py:94] - 
=== 模型性能对比 ===
2025-04-14 17:36:17 - INFO - [standard.py:95] - 
               accuracy  precision    recall        f1   auc_roc
xgboost        0.820833   0.688889  0.330541  0.446732  0.783665
random_forest  0.819333   0.659693  0.360244  0.466010  0.779358
logistic       0.818333   0.634825  0.399848  0.490654  0.762701
neural_net     0.818000   0.659452  0.348058  0.455633  0.775113
2025-04-14 17:36:17 - INFO - [standard.py:100] - 
最佳模型是 xgboost, 得分: 0.8208
